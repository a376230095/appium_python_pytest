{"name": "test_attach_html", "status": "broken", "statusDetails": {"message": "AttributeError: html", "trace": "def test_attach_html():\n>       allure.attach(\"<body>这是一段htmlbody块</body>\",\"html测试块\",attachment_type=allure.attachment_type.html)\n\ntest_attach.py:7: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <enum 'AttachmentType'>, name = 'html'\n\n    def __getattr__(cls, name):\n        \"\"\"Return the enum member matching `name`\n    \n        We use __getattr__ instead of descriptors or inserting into the enum\n        class' __dict__ in order to support `name` and `value` being both\n        properties for enum members (which live in the class' __dict__) and\n        enum members themselves.\n    \n        \"\"\"\n        if _is_dunder(name):\n            raise AttributeError(name)\n        try:\n            return cls._member_map_[name]\n        except KeyError:\n>           raise AttributeError(name) from None\nE           AttributeError: html\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python38\\lib\\enum.py:341: AttributeError"}, "start": 1592318654913, "stop": 1592318654914, "uuid": "876c25db-089d-4140-b04d-6dedb9158ee5", "historyId": "74cfd31ec626774446f8a110fae8a9cb", "testCaseId": "1cc520b151eedb758b58642a79d6a997", "fullName": "test_attach#test_attach_html", "labels": [{"name": "suite", "value": "test_attach"}, {"name": "host", "value": "LAPTOP-4F3KR3S3"}, {"name": "thread", "value": "8020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_attach"}]}